{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc

\f0\b\fs24 \cf0 \ul \ulc0 Project 2 Plan\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 \ulc0 Description\
\ulnone 	The basic idea of my app is to test the user on their knowledge of musical notes and general music theory. It will use the CoreAudioKit.framework and AVFoundation.framework. The app will play audio when the user taps on the piano and/or when a sound bit needs to be played during a question. The app will also keep track of correct number of guesses and total number of guesses. As, I develop my app further, I plan to improve the gaming aspect of the app by asking more difficult questions as the number of guesses increases. I would like to add a free play mode as well if time permits.\
\
\ul Algorithm Description\
\ulnone 	First, my app will have all of it\'92s sounds ready to go at launch, no sounds will be recorded or generated during the apps use. A question will be randomly selected from a group of easy questions and displayed on screen. The user then has to tap a note on the piano keyboard, if they tap the correct note, the screen will flash with the word \'93correct!\'94 and the counter will increase for correct number of guesses. If the user taps the wrong note, the screen will flash with the word \'93wrong!\'94, and total number of guesses will increase by one. After the user has had 5 incorrect answers, they will be brought back to a starting screen, and the difficulty of questions will reset. If a user correctly answers 10 questions before 5 incorrect ones, they will win the game. Lastly, I want to give the user a button that disables questions and allows the user to play the piano freely. }